/*!
 * Timeline.js v1.0.0
 *
 * (c) 2018 Sawada Makoto.
 * Released under the MIT License
 */(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):a.TimelineChart=b()})(this,function(){"use strict";var a=function(a,b){return b={exports:{}},a(b,b.exports),b.exports}(function(a,b){var f=Math.abs,g=Math.ceil,h=Math.floor;function c(a){return a&&!isNaN(parseFloat(a))&&isFinite(a)}function d(a,b,c){var d=c.current,e=c.next,i=c.max,j=0<a?h:g;return a&&(b[e]+=j.call(null,a/i),b[d]+=a%i),f(b[d])>=i&&(b[e]+=j.call(null,b[d]/i),b[d]%=i),b}function e(a,b){return(0!=b%100&&0==b%4||0==b%400)&&1===a?29:n[a]}var i=/^(\d+):(\d+):(\d+):(\d+)(\.\d+)?/,j=/^(\d+):(\d+):(\d+)(\.\d+)?/,k=b.TimeSpan=function(a,b,d,e,f){this.msecs=0,c(f)&&(this.msecs+=f*86400000),c(e)&&(this.msecs+=e*3600000),c(d)&&(this.msecs+=d*60000),c(b)&&(this.msecs+=b*1000),c(a)&&(this.msecs+=a)};b.fromMilliseconds=function(a){return c(a)?new k(a,0,0,0,0):void 0},b.fromSeconds=function(a){return c(a)?new k(0,a,0,0,0):void 0},b.fromMinutes=function(a){return c(a)?new k(0,0,a,0,0):void 0},b.fromHours=function(a){return c(a)?new k(0,0,0,a,0):void 0},b.fromDays=function(a){return c(a)?new k(0,0,0,0,a):void 0},b.parse=function(a){function b(a){return a?1e3*parseFloat("0"+a):0}var c;return(c=a.match(i))?new k(b(c[5]),c[4],c[3],c[2],c[1]):(c=a.match(j))?new k(b(c[4]),c[3],c[2],c[1],0):null};var l={milliseconds:{exp:/(\d+)milli(?:second)?[s]?/i,compute:function(a,b){return d(a,b,{current:"milliseconds",next:"seconds",max:1e3})}},seconds:{exp:/(\d+)second[s]?/i,compute:function(a,b){return d(a,b,{current:"seconds",next:"minutes",max:60})}},minutes:{exp:/(\d+)minute[s]?/i,compute:function(a,b){return d(a,b,{current:"minutes",next:"hours",max:60})}},hours:{exp:/(\d+)hour[s]?/i,compute:function(a,b){return d(a,b,{current:"hours",next:"days",max:24})}},days:{exp:/(\d+)day[s]?/i,compute:function(a,b){function c(a){return 0>a?(b.years-=1,11):11<a?(b.years+=1,0):a}var d=e(b.months,b.years),g=0<=a?1:-1,h=0<=a?-1:1,i=0;if(a){for(;f(a)>=d;)b.months+=1*g,b.months=c(b.months),a+=h*d,d=e(b.months,b.years);b.days+=h*a}return 0>b.days?i=-1:b.days>n[b.months]&&(i=1),(-1==i||1==i)&&(b.months+=i,b.months=c(b.months),b.days=n[b.months]+b.days),b}},months:{exp:/(\d+)month[s]?/i,compute:function(a,b){var c=0<a?h:g;return a&&(b.years+=c.call(null,a/12),b.months+=a%12),11<b.months&&(b.years+=h((b.months+1)/12),b.months=(b.months+1)%12-1),b}},years:{exp:/(\d+)year[s]?/i,compute:function(a,b){return a&&(b.years+=a),b}}},m=Object.keys(l);b.parseDate=function(a){var b,c,d,e=Date.parse(a),f="Z([\\+|\\-])?",g={};if(!isNaN(e))return new Date(e);if(m.forEach(function(){f+="(\\d+[a-zA-Z]+)?"}),/^NOW/i.test(a)?(e=Date.now(),f=f.replace(/Z/,"NOW")):/^\-/.test(a)||/^\+/.test(a)?(e=Date.now(),f=f.replace(/Z/,"")):(e=a.match(/^([^Z]+)/i),e=Date.parse(e[1])),!e||!(c=a.match(new RegExp(f,"i"))))return null;e=new Date(e),d="+"===c[1]?1:-1;var b={milliseconds:e.getMilliseconds(),seconds:e.getSeconds(),minutes:e.getMinutes(),hours:e.getHours(),days:e.getDate(),months:e.getMonth(),years:e.getFullYear()};return c.slice(2).filter(Boolean).forEach(function(a){m.forEach(function(b){var c;(c=a.match(l[b].exp))&&(g[b]=d*parseInt(c[1],10))})}),m.forEach(function(a){b=l[a].compute(g[a],b)}),new Date(b.years,b.months,b.days,b.hours,b.minutes,b.seconds,b.milliseconds)},b.fromDates=function(a,c,d){if("string"==typeof a&&(a=b.parseDate(a)),"string"==typeof c&&(c=b.parseDate(c)),!(a instanceof Date&&c instanceof Date))return null;var e=c.valueOf()-a.valueOf();return d&&(e=f(e)),new k(e,0,0,0,0)},b.test=function(a){return i.test(a)||j.test(a)},b.instanceOf=function(a){return a instanceof k},b.clone=function(a){return a instanceof k?b.fromMilliseconds(a.totalMilliseconds()):void 0},k.prototype.add=function(a){a instanceof k&&(this.msecs+=a.totalMilliseconds())},k.prototype.addMilliseconds=function(a){c(a)&&(this.msecs+=a)},k.prototype.addSeconds=function(a){c(a)&&(this.msecs+=a*1000)},k.prototype.addMinutes=function(a){c(a)&&(this.msecs+=a*60000)},k.prototype.addHours=function(a){c(a)&&(this.msecs+=a*3600000)},k.prototype.addDays=function(a){c(a)&&(this.msecs+=a*86400000)},k.prototype.subtract=function(a){a instanceof k&&(this.msecs-=a.totalMilliseconds())},k.prototype.subtractMilliseconds=function(a){c(a)&&(this.msecs-=a)},k.prototype.subtractSeconds=function(a){c(a)&&(this.msecs-=a*1000)},k.prototype.subtractMinutes=function(a){c(a)&&(this.msecs-=a*60000)},k.prototype.subtractHours=function(a){c(a)&&(this.msecs-=a*3600000)},k.prototype.subtractDays=function(a){c(a)&&(this.msecs-=a*86400000)},k.prototype.totalMilliseconds=function(a){var b=this.msecs;return!0===a&&(b=h(b)),b},k.prototype.totalSeconds=function(a){var b=this.msecs/1000;return!0===a&&(b=h(b)),b},k.prototype.totalMinutes=function(a){var b=this.msecs/60000;return!0===a&&(b=h(b)),b},k.prototype.totalHours=function(a){var b=this.msecs/3600000;return!0===a&&(b=h(b)),b},k.prototype.totalDays=function(a){var b=this.msecs/86400000;return!0===a&&(b=h(b)),b},k.prototype.__defineGetter__("milliseconds",function(){return this.msecs%1e3}),k.prototype.__defineGetter__("seconds",function(){return h(this.msecs/1000)%60}),k.prototype.__defineGetter__("minutes",function(){return h(this.msecs/60000)%60}),k.prototype.__defineGetter__("hours",function(){return h(this.msecs/3600000)%24}),k.prototype.__defineGetter__("days",function(){return h(this.msecs/86400000)}),k.prototype.equals=function(a){return a instanceof k?this.msecs===a.totalMilliseconds():void 0},k.prototype.toString=function(){return this.format?this.format(this):this._format()},k.prototype._format=function(){return[this.days,this.hours,this.minutes,this.seconds+"."+this.milliseconds].join(":")};var n=[31,28,31,30,31,30,31,31,30,31,30,31]}),b=a.TimeSpan,c=a.fromMilliseconds,d=a.fromSeconds,e=a.fromMinutes,f=a.fromHours,g=a.fromDays,h=a.parse,i=a.parseDate,j=a.fromDates,k=a.test,l=a.instanceOf,m=a.clone,n={borderColor:"#000",backgroundColor:"#fff"};return class{constructor(a,b){this.element=a,this.canvas=a.getContext("2d"),this.config=Object.assign(n,b),this.data=b.data.map(a=>{const b=this.parseTimeSpanString(a.startTime),c=this.parseTimeSpanString(a.endTime);return{offset:b.totalMinutes(),minutes:c.totalMinutes()-b.totalMinutes(),color:a.color}})}draw(){this.canvas.strokeStyle=this.config.borderColor,this.canvas.strokeRect(0,0,this.element.width,this.element.height),this.canvas.fillStyle=this.config.backgroundColor,this.canvas.fillRect(1,1,this.element.width-2,this.element.height-2);const a=this.element.width-2,b=this.element.height-2,c=a/1440;for(let a=0;a<this.data.length;a++){const d=this.data[a];this.canvas.fillStyle=d.color?d.color:"#fff",this.canvas.fillRect(d.offset*c+1,1,d.minutes*c,b)}}parseTimeSpanString(a){const c=a.split(":"),d=new b;return d.addHours(parseInt(c[0])),d.addMinutes(parseInt(c[1])),d}}});
